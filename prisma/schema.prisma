generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  public_key  String                @id
  username    String
  layout      Json
  devices     AuthenticatorDevice[]
  badges      Badge[]
  dataEntries UserDataEntry[]       @relation("UserToUserDataEntry")

  @@map("users")
}

model UserDataEntry {
  id        Int        @id @default(autoincrement())
  user_id   String
  domain    Bytes
  dataItems DataItem[] @relation("DataEntryToDataItem")
  user      User       @relation("UserToUserDataEntry", fields: [user_id], references: [public_key])

  @@map("user_data_entries")
}

model DataItem {
  id              Int           @id @default(autoincrement())
  userDataEntryId Int
  uuid            String
  value           Bytes
  nonce           Bytes
  userDataEntry   UserDataEntry @relation("DataEntryToDataItem", fields: [userDataEntryId], references: [id])

  @@map("data_items")
}

model AuthenticatorDevice {
  credential_id         Bytes                    @id
  credential_public_key Bytes
  counter               Int
  user_id               String
  user                  User                     @relation(fields: [user_id], references: [public_key])
  transports            AuthenticatorTransport[]

  @@map("authenticator_devices")
}

model AuthenticatorTransport {
  device_id Bytes
  transport AuthenticatorTransportFuture
  device    AuthenticatorDevice          @relation(fields: [device_id], references: [credential_id])

  @@id([device_id, transport])
  @@map("authenticator_transports")
}

model Badge {
  id      Int    @id @default(autoincrement())
  fileKey String
  user_id String
  user    User   @relation(fields: [user_id], references: [public_key])

  @@map("badges")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model userdata {
  public_key String?
  domain     String?
  label      String?
  value      String?
  nonce      String?

  @@ignore
}

enum AuthenticatorTransportFuture {
  ble
  cable
  hybrid
  internal
  nfc
  smart_card
  usb
}
